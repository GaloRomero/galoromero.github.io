name: Deploy website to GitHub Pages

env:
  WC_HUGO_VERSION: '0.136.5'

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: ${{ env.WC_HUGO_VERSION }}
        extended: true

    - name: Setup Cache
      uses: actions/cache@v3
      with:
        path: /tmp/hugo_cache_runner/
        key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.mod') }}
        restore-keys: |
          ${{ runner.os }}-hugomod-

    - name: Setup GitHub Pages
      id: pages
      uses: actions/configure-pages@v3

    - name: Build with Hugo
      env:
        HUGO_ENVIRONMENT: production
      run: |
        echo "🛠 Running Hugo build..."
        hugo --minify --baseURL "${{ steps.pages.outputs.base_url }}/" || { echo "❌ Hugo build failed!"; exit 1; }
        echo "✅ Hugo build completed!"

    # 🔍 Step 1: Check if 'public/' was created
    - name: Debug - Verify Hugo Output
      run: |
        echo "🔍 Checking if public/ directory exists..."
        if [ -d "./public" ]; then
          echo "✅ Public directory exists. Listing contents:"
          ls -la ./public
        else
          echo "❌ Public directory NOT found! Hugo build might have failed."
          exit 1
        fi

    - name: Generate Pagefind Search Index
      run: npx pagefind --site "public"

    # 🔍 Step 2: Upload artifact correctly
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: github-pages
        path: public
        if-no-files-found: error  # 🔥 Ensures failure if no files found

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: github-pages
        path: ./public

    # 🔍 Step 3: Check if artifact is downloaded
    - name: Debug - Check Downloaded Files
      run: |
        echo "🔍 Checking if public/ directory exists after artifact download..."
        if [ -d "./public" ]; then
          echo "✅ Public directory exists in deploy step. Listing contents:"
          ls -la ./public
        else
          echo "❌ Public directory NOT found in deploy step!"
          exit 1
        fi

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
