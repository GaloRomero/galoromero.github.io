name: Deploy website to GitHub Pages

env:
  WC_HUGO_VERSION: '0.136.5'

on:
  # Trigger the workflow every time you push to the `main` branch
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build website
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Ensure we get all history for Hugo

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: ${{ env.WC_HUGO_VERSION }}
        extended: true

    - name: Cache Hugo modules
      uses: actions/cache@v3
      with:
        path: /tmp/hugo_cache_runner/
        key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.mod') }}
        restore-keys: |
          ${{ runner.os }}-hugomod-

    - name: Build the site with Hugo
      run: |
        echo "Hugo version: $(hugo version)"
        echo "Hugo Cache Dir: $(hugo config | grep cachedir)"
        hugo --minify --baseURL "https://example.github.io/"  # Ajusta la URL según tu dominio
        echo "Hugo build complete. Listing 'public' directory contents."
        ls -al ./public  # Verifica si la carpeta 'public' existe

    - name: Check if public folder exists
      run: |
        if [ ! -d "./public" ]; then
          echo "ERROR: La carpeta 'public' no existe"
          exit 1  # Falla el paso si no existe la carpeta
        fi

    - name: Generate Pagefind search index
      run: npx pagefind --site "public"

    - name: Upload artifact to GitHub
      uses: actions/upload-artifact@v4  # Mantén la versión más reciente aquí
      with:
        name: github-pages  # Asegúrate de que el nombre sea el mismo en el paso de deploy
        path: ./public  # Verifica si la carpeta pública está generada correctamente

  # Deploy to GitHub Pages
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Download artifact from build step
        uses: actions/download-artifact@v4  # Actualizamos a la versión más reciente (v4)
        with:
          name: github-pages  # El nombre debe coincidir con el del paso anterior

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2
        with:
          artifact_name: github-pages  # Asegúrate de que este nombre coincida con el de upload-artifact
