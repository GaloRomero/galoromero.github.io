name: Deploy website to GitHub Pages

env:
  WC_HUGO_VERSION: '0.136.5'

on:
  # Trigger the workflow every time you push to the `main` branch
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Provide permission to clone the repo and deploy it to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build website
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: ${{ env.WC_HUGO_VERSION }}
        extended: true
    - uses: actions/cache@v3
      with:
        path: /tmp/hugo_cache_runner/
        key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.mod') }}
        restore-keys: |
          ${{ runner.os }}-hugomod-
    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v3
    - name: Build with Hugo
      env:
        HUGO_ENVIRONMENT: production
      run: |
        echo "Hugo Cache Dir: $(hugo config | grep cachedir)"
        hugo --minify --baseURL "${{ steps.pages.outputs.base_url }}/"
    - name: Verify public folder exists and list contents
      run: |
        echo "Verificando si la carpeta public existe y tiene archivos"
        ls -al ./public  # Verificar la existencia de la carpeta y su contenido
        if [ ! -d "./public" ]; then
          echo "ERROR: La carpeta 'public' no existe"
          exit 1  # Si no existe la carpeta, fallamos la acción
        fi
    - name: Generate Pagefind search index
      run: npx pagefind --site "public"
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: github-pages  # Nombre del artefacto
        path: ./public  # Asegúrate de que esta ruta sea correcta

  # Deploy website to GitHub Pages hosting
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build  # Este paso solo se ejecuta después del build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 
        with:
          artifact_name: github-pages  # Debe coincidir con el nombre del artefacto de subida
